#!/usr/bin/env python2.7
#
# /usr/sbin/nsm_sensor_ps-watch-snort_agent
#
# Generated by Chef for <%= node[:fqdn] %>
#
#

#
# Simple script to look for stalled snort_agents attempting to connect to sguild server
# Kill the process and run 'service nsm start'
#
import re, glob, os, signal, time


nsm_start = False
for log in glob.glob('/var/log/nsm/*/snort_agent*.log'):

	if not os.path.exists(log):
		exit()
	snort_agent_log = open(log).read()

	if not re.search('RegisterAgent snort', snort_agent_log):
		sensor = log.split(os.path.sep)[4]
		snort_agent = log.split(os.path.sep)[5].split('.')[0]

		snort_agent_pid_path = '/var/run/nsm/%s/%s.pid' % (sensor, snort_agent)

		if not os.path.exists(snort_agent_pid_path):
			exit()


		snort_agent_pid = open(snort_agent_pid_path).read()

		if snort_agent_pid:
			#print('killing %s %s %s' % (sensor, snort_agent, snort_agent_pid))
			os.kill(int(snort_agent_pid), signal.SIGTERM)
			nsm_start = True
	time.sleep(.5)


if nsm_start:
	os.system("service nsm start")
