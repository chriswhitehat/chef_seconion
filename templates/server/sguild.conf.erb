#
# /etc/nsm/securityonion/sguild.conf
#
# Generated by Chef for <%= node[:fqdn] %>

# Path to the sguild libs.
set SGUILD_LIB_PATH "/usr/lib/sguild"

# DEBUG 0=off 1=important stuff 2=everything. Option 2 is VERY chatty.
set DEBUG <%= node[:seconion][:server][:debug] %>

# Run sguild in daemon mode. 1=on 0=off
# This overrides above and will set DEBUG off.
# set DAEMON 1 is the same as using -D
set DAEMON 0

# Syslog Facility to log to in DAEMON mode
# Note the Errors will go to SYSLOGFACILITY.err
# DEBUG == 1 messages go to SYSLOGFACILITY.notice
# DEBUG == 2 messages go to SYSLOGFACILITY.info
# So, even at DEBUG == 2 you can send the 'important'
# debug level 1 messages one place and the noisy info stuff another
# by twiddling your syslog.conf
set SYSLOGFACILITY daemon

# Use the below to configure alert aggregation. Aggregation will
# always use the source IP and signature (message). By default
# we use the sensor ID too. If you want to override this,
# then set the below to 0.
set SENSOR_AGGREGATION_ON 1

# If the server is on a multi interface machine and you want it
# to only listen on a specific IP addr, then uncomment and put
# the correct values here. You can listen on seperate addrs for
# clients and sensors.
# set BIND_SENSOR_IP_ADDR 127.0.0.1
# set BIND_CLIENT_IP_ADDR 127.0.0.1

# What port for sguild to listen on.
# Client Connects
set SERVERPORT 7734

# Sensor connects
set SENSORPORT 7736

# Path to look for rules. Sguild will append the hostname (/etc/snort/rules/<hostname>/*.rules)
# Some day we'll move the rules into the DB.
set RULESDIR "/nsm/server_data/securityonion/rules"

# Where to temporarily store portscan and session data for loading into the DB
set TMPDATADIR /tmp

# DataBase Info
set DBHOST localhost
set DBPORT 3306
set DBNAME "securityonion_db"
set DBUSER "sguil"
set DBPASS "password"

# Configs for xscript function
# Where you want to archive raw file locally when xscripts are requested.
set LOCAL_LOG_DIR "/nsm/server_data/securityonion/archive"

# Where to store DB LOADable files until loaderd can put them in the DB
set TMP_LOAD_DIR "/nsm/server_data/securityonion/load"

# We're using a newer version of tcpflow that includes
# extra output that confuses Sguil.  tcpflow-no-tags
# is a shim that sends the correct options to tcpflow
# such that its output is what Sguil is expecting.
set TCPFLOW "/usr/bin/tcpflow-no-tags"

# p0f - (C) Michal Zalewski <lcamtuf\@gis.net>, William Stearns <wstearns\@pobox.com>
# If you have p0f (a passive OS fingerprinting system) installed, you can have
# xscriptd attempt to use it by enabling it here. Get p0f at http://www.stearns.org
#
# 1=ON, 0=OFF
set P0F 1

# Path of the p0f binary. Switches -q and -s <filename> are appended on exec,
# add any others you may need here.
set P0F_PATH "/usr/sbin/p0f"
